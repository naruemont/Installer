#!/bin/sh
MAJOR    = 0
MINOR    = 0
PATCH    = 0
BUILD    = 7
SUFFIX 	 = crypto-future-trading
CHOST	 = x86_64-linux-gnu	 
VERSION  = master

packages:
	@echo "Update Environments"	&& test -n "`command -v apt-get`" && sudo apt-get -y install g++ build-essential automake autoconf libtool libxml2 libxml2-dev zlib1g-dev openssl stunnel python curl gzip screen libboost-all-dev\
	|| (test -n "`command -v yum`" && sudo yum -y install gcc-c++ automake autoconf libtool libxml2 libxml2-devel openssl stunnel python curl gzip screen libboost-all-dev) \
	|| (test -n "`command -v brew`" && (xcode-select --install || :) && (brew install automake autoconf libxml2 sqlite openssl zlib stunnel python curl libboost-all-dev gzip proctools || brew upgrade || :)) \
	|| (test -n "`command -v pacman`" && sudo pacman --noconfirm -S --needed base-devel libxml2 zlib sqlite curl libcurl-compat openssl stunnel python gzip screen libboost-all-dev)
	sudo mkdir -p /data/db/
	sudo chown $(shell id -u) /data/db

git-clone:
	@echo "Initialization Clone Project ($(VERSION) )" && git clone --branch $(VERSION) git@github.com:noppakao/Crypto-Future-Trading.git && mv ./Crypto-Future-Trading/* . && rm -R Crypto-Future-Trading

link:
	cd app/server && ln -f -s ../../$(KLOCAL)/bin/K-$(CHOST) K
	test -n "`ls *.sh 2>/dev/null`" || (cp etc/K.sh.dist K.sh && chmod +x K.sh)
	@$(MAKE) gdax -s


credentials: 
	test -f ~/.ssh/id_rsa || (				\
	read -p "Please Enter Your Email:" email;	\
	ssh-keygen -t rsa -b 4096 -C $$email);)
	eval `ssh-agent` && ssh-add ~/.ssh/id_rsa
	@echo "Please Add SSH key to your github account:" && cat ~/.ssh/id_rsa.pub

	
install:
	@$(MAKE) packages	
	$(MAKE) git-clone
	$(MAKE) link 
	@echo "Finished Installation"

	

